AWSTemplateFormatVersion : '2010-09-09'
Description: Total Shed Solutions Pipeline - totalshedsolutions-pipeline

Parameters:
  ProjectName:
    Description: Project name
    Type: String
    Default: totalshedsolutions
  DefaultBranch:
    Description: Default branch
    Type: String
    Default: master
  EmailSubscriptionEndpoint:
    Description: Alerts email
    Type: String
    Default: 'stage88@gmail.com'

Resources:
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties: {}

  AalertsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref AlertsTopic
      PolicyDocument:
        Id: Id1
        Version: 2012-10-17
        Statement:
          - Sid: Sid1
            Effect: Allow
            Principal:
              Service:
                - 'events.amazonaws.com'
                - 'budgets.amazonaws.com'
                - 'rds.amazonaws.com'
                - 's3.amazonaws.com'
                - 'backup.amazonaws.com'
                - 'codestar-notifications.amazonaws.com'
            Action: 'sns:Publish'
            Resource: !Ref AlertsTopic
          - Sid: Sid2
            Effect: Allow
            Principal:
              AWS: '*'
            Action: 'sns:Publish'
            Resource: !Ref AlertsTopic
            Condition:
              StringEquals:
                'AWS:SourceOwner': !Ref 'AWS::AccountId'
          - Sid: Sid3
            Effect: Allow
            Principal:
              Service: 'ses.amazonaws.com'
            Action: 'sns:Publish'
            Resource: !Ref AlertsTopic
            Condition:
              StringEquals:
                'AWS:Referer': !Ref 'AWS::AccountId'
  
  AlertsEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref EmailSubscriptionEndpoint
      Protocol: email
      TopicArn: !Ref AlertsTopic

  DeploymentArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '{{resolve:secretsmanager:${ProjectName}:SecretString:DeploymentBucket}}' 
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Client
          Value: !Ref ProjectName
  
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '{{resolve:secretsmanager:${ProjectName}:SecretString:PipelineBucket}}'
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Client
          Value: !Ref ProjectName

  RolePolicies: 
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: !Sub ${ProjectName}-codepipeline
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codebuild:BatchGetBuilds'
              - 'codebuild:StartBuild'
              - 'codestar-connections:*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'secretsmanager:GetSecretValue'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'iam:AttachRolePolicy'
              - 'iam:CreateRole'
              - 'iam:CreateServiceLinkedRole'
              - 'iam:DeleteRole'
              - 'iam:DeleteRolePolicy'
              - 'iam:DeleteServiceLinkedRole'
              - 'iam:DetachRolePolicy'
              - 'iam:GetRole'
              - 'iam:GetRolePolicy'
              - 'iam:GetServiceLinkedRoleDeletionStatus'
              - 'iam:ListOpenIdConnectProviders'
              - 'iam:ListRoles'
              - 'iam:PassRole'
              - 'iam:PutRolePolicy'
              - 'iam:UpdateAssumeRolePolicy'
              - 'sns:ListPlatformApplications'
            Resource: '*'          
          - Effect: Allow
            Action:
              - 'waf:*'
              - 'waf-regional:*'
              - 'wafv2:*'
              - 'cloudfront:*'
              - 'apigateway:*'
              - 'application-autoscaling:*'
              - 'autoscaling:*'
              - 'cloudformation:*'
              - 'cloudwatch:*'
              - 'codedeploy:*'
              - 'cognito-identity:*'
              - 'cognito-idp:*'
              - 'cognito-sync:*'
              - 'datapipeline:*'
              - 'dax:*'
              - 'dynamodb:*'
              - 'qldb:*'
              - 'ec2:*'
              - 'ecs:*'
              - 'ecr:*'
              - 'elasticache:*'
              - 'elasticbeanstalk:*'
              - 'elasticloadbalancing:*'
              - 'lambda:*'
              - 'rds:*'
              - 'resource-groups:*'
              - 's3:*'
              - 'sns:*'
              - 'sqs:*'
              - 'tag:*'
              - 'logs:*'
              - 'kms:*'
              - 'acm:*'
            Resource: '*'
      Roles: 
        - !Ref CloudFormationServiceRole
        - !Ref CodePipelineServiceRole
  
  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${ProjectName}-cloudformation
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${ProjectName}-codepipeline
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole

  WebsitePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: 
      - CodePipelineArtifactStoreBucket
      - RolePolicies
    Properties:
      Name: !Sub ${ProjectName}-website
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Tags:
        - Key: Client
          Value: !Ref ProjectName     
      Stages:
        - Name: Source
          Actions: 
            - Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts: 
                - Name: SourceArtifact
              Configuration: 
                ConnectionArn: !Sub '{{resolve:secretsmanager:${ProjectName}:SecretString:GitHubConnectionArn}}'
                FullRepositoryId: !Sub stage88/${ProjectName}-website
                BranchName: !Ref DefaultBranch
              RunOrder: 1
        - Name: Infrastructure
          Actions:
            - Name: CDN
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              RunOrder: 1
              Configuration:
                ActionMode: CREATE_UPDATE 
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND                
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                StackName: !Sub ${ProjectName}-cdn-website
                TemplatePath: !Sub 'SourceArtifact::infrastructure/templates/40-cdn.yml'
                ParameterOverrides: !Sub |
                  {
                    "SiteBucket": "{{resolve:secretsmanager:${ProjectName}:SecretString:WebsiteBucket}}",
                    "SiteAlias": "{{resolve:secretsmanager:${ProjectName}:SecretString:DomainName}}",
                    "CertificateArn": "{{resolve:secretsmanager:${ProjectName}:SecretString:CertificateArn}}"
                  }
              OutputArtifacts: []
              InputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build-Website
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 1
              Configuration:
                ProjectName: !Sub ${ProjectName}-website
                PrimarySource: SourceArtifact                
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts: 
                - Name: BuildArtifact

  WebsitePipelineNotifications:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      Name: !Sub ${WebsitePipeline}-notification-rule
      DetailType: BASIC
      Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${WebsitePipeline}
      EventTypeIds: 
        - codepipeline-pipeline-pipeline-execution-failed
        - codepipeline-pipeline-pipeline-execution-canceled
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-pipeline-execution-resumed
        - codepipeline-pipeline-pipeline-execution-succeeded
        - codepipeline-pipeline-pipeline-execution-superseded
      Targets: 
        - TargetType: SNS
          TargetAddress: !Ref AlertsTopic